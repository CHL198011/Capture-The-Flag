[Default]

Version = 1
;; Used incase there is ever a breaking change, or to inform user in log about a new feature.

Strip Chars = ";[]"
;; List of characters to strip out
Strip Chars Mode = 0
;; 0 = Strip Bad Chars, 1 = Strip + Log Bad Chars, 2 = Return Error & Log Bad Chars
;;     Note: Logging on works when sending data to database.

Input SQF Parser = false
;; Expermential
;;   If enabled will use SQF Array Parser instead of : seperator for values
;;   i.e   0:SQL:UpdatePlayer:["Joe",[1,2,0],0.22333,"PlayerBackpack",-3]
;;   Advantage is that you dont need to strip : seperator from user inputted values


 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;							;
;							;
;	  Queries and Stuff		;
;							;
;							;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



[insertPlayerData1]
SQL1_1 = INSERT INTO player_info
SQL1_2 = 	(playerid,beguid,name,servers_played_on,join_game_restriction)
SQL1_3 = 		VALUES(?,?,?,?,?);

SQL1_INPUTS = 1, 1-beguid, 2, 3, 4
Return InsertID String = true

[insertPlayerData2]
SQL1_1 = INSERT INTO player_settings
SQL1_2 = 	(playerid, currency, experience, clothing_blufor, clothing_opfor, vehicles, weapons, skills, enable_environment, show_player_tags, show_hit_markers, terrain_smoothing, foot_view_distance, land_view_distance, air_view_distance)
SQL1_3 = 		VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);

SQL1_INPUTS = 1, 2, 3, 4, 4, 4, 4, 4, 5, 6, 7, 8, 9, 10, 11
Return InsertID String = true

[insertPlayerData3]
SQL1_1 = INSERT INTO player_statistics
SQL1_2 = 	(playerid, rank, kills_normal, kills_assist, kills_roadkill, kills_headshot, kills_longdistance, kills_avenger, kills_doublekill, kills_triplekill, kills_quadkill, kills_pentakill, kills_killfeed, deaths, revive_player, revived, heal_player, healed, execute_player, executed, flag_captures, flag_steals, flag_pickups, flag_returns, flag_drops)
SQL1_3 = 		VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);

SQL1_INPUTS = 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
Return InsertID String = true

[insertPlayerData4]
SQL1_1 = INSERT INTO player_skills
SQL1_2 = 	(playerid, steadyAim, athlete, ammo, mechanic, lifeSaver, packingHeat, flakJacket, conqueror)
SQL1_3 = 		VALUES(?,?,?,?,?,?,?,?,?);

SQL1_INPUTS = 1, 2, 2, 2, 2, 2, 2, 2, 2
Return InsertID String = true



[fetchPlayerData]
SQL1_1  = UPDATE player_info SET last_online=NOW() WHERE playerid=?;
SQL2_1  = SELECT 
SQL2_2  =	info.name, info.servers_played_on, info.join_game_restriction,
SQL2_3  = 	settings.currency,settings.experience,settings.clothing_blufor,settings.clothing_opfor,settings.vehicles,settings.weapons,settings.skills,settings.enable_environment,settings.show_player_tags,settings.show_hit_markers,settings.terrain_smoothing,settings.foot_view_distance,settings.land_view_distance,settings.air_view_distance,
SQL2_4  = 	statistics.rank,
SQL2_5  =	skills.steadyAim, skills.athlete, skills.ammo, skills.mechanic, skills.lifeSaver, skills.packingHeat, skills.flakJacket, skills.conqueror
SQL2_6  =		FROM 
SQL2_7  =            player_info 		AS info
SQL2_8  =  LEFT JOIN player_settings 	AS settings 	ON 	info.playerid=settings.playerid
SQL2_9  =  LEFT JOIN player_statistics 	AS statistics 	ON 	info.playerid=statistics.playerid
SQL2_10 =  LEFT JOIN player_skills 		AS skills 	 	ON 	info.playerid=skills.playerid
SQL2_11 = 		WHERE info.playerid=?;

SQL1_INPUTS = 1
SQL2_INPUTS = 1
OUTPUT = 1-String, 2, 3-String, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26



[updatePlayerDataInfo]
Prepared Statement = false

SQL1_1 = UPDATE player_info SET $CUSTOM_1$='$CUSTOM_2$' WHERE playerid='$CUSTOM_3$';
SQL1_INPUTS = 1-MySQL_Escape, 2-MySQL_Escape, 3-MySQL_Escape

[updatePlayerDataStat]
Prepared Statement = false

SQL1_1 = UPDATE player_statistics SET $CUSTOM_1$=$CUSTOM_2$+1 WHERE playerid=$CUSTOM_3$;
SQL1_INPUTS = 1-MySQL_Escape, 1-MySQL_Escape, 2

[updatePlayerDataSkill]
Prepared Statement = false

SQL1_1 = UPDATE player_skills SET $CUSTOM_1$='$CUSTOM_2$' WHERE playerid=$CUSTOM_3$;
SQL1_INPUTS = 1-MySQL_Escape, 2, 3

[updatePlayerDataSettCore]
SQL1_1 = UPDATE player_settings SET currency=?, experience=? WHERE playerid=?;
SQL1_INPUTS = 1, 2, 3

[updatePlayerDataSettOptiB]
SQL1_1 = UPDATE player_settings 
SQL1_2 =	SET clothing_blufor=?, vehicles=?, weapons=?, skills=?, enable_environment=?, show_player_tags=?, show_hit_markers=?, terrain_smoothing=?, foot_view_distance=?, land_view_distance=?, air_view_distance=? 
SQL1_3 =		WHERE playerid=?;
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12

[updatePlayerDataSettOptiO]
SQL1_1 = UPDATE player_settings 
SQL1_2 =	SET clothing_opfor=?, vehicles=?, weapons=?, skills=?, enable_environment=?, show_player_tags=?, show_hit_markers=?, terrain_smoothing=?, foot_view_distance=?, land_view_distance=?, air_view_distance=? 
SQL1_3 =		WHERE playerid=?;
SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12

[updatePlayerDataTimePlayed]
Prepared Statement = false

SQL1_1 = UPDATE player_statistics 
SQL1_2 = 	SET $CUSTOM_1$=ADDTIME($CUSTOM_2$, (SELECT TIMEDIFF(NOW(),last_online) FROM player_info WHERE playerid='$CUSTOM_3$')) 
SQL1_3 =		WHERE playerid='$CUSTOM_4$';
SQL2_1 = UPDATE player_info SET last_online=NOW() WHERE playerid='$CUSTOM_1$';
SQL1_INPUTS = 1-MySQL_Escape, 1-MySQL_Escape, 2-MySQL_Escape, 2-MySQL_Escape
SQL2_INPUTS = 2-MySQL_Escape



[insertRoundStats]
SQL1_1 = INSERT INTO round_statistics
SQL1_2 = 	(server, map)
SQL1_3 = 		VALUES(?,?);

SQL1_INPUTS = 1, 2
Return InsertID String = true

[updateRoundStats]
SQL1_1 = UPDATE round_statistics 
SQL1_2 = 	SET blufor_flags=?, opfor_flags=?
SQL1_3 = 		WHERE id=?;
SQL1_INPUTS = 1, 2, 3

[endRoundStats]
SQL1_1 = UPDATE round_statistics 
SQL1_2 = 	SET round_end=NOW()
SQL1_3 = 		WHERE id=?;
SQL1_INPUTS = 1
